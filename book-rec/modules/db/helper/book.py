# -*- coding: utf-8 -*-

from modules.db.models.book import Book
from models.db.helper import mysqlConn

@mysqlConn
def getPopularBooks(quantity=10, cur, conn):
    '''Get the most popular books.

    Determine polularity in according to doubanRatesum.
    :Param quantity: Number of returned books.
    :Return: A list of Book object.
    '''
    sql = '''select uid, name, imgUrl from book order by doubanRateSum desc 
        limit %s'''
    num = cur.execute(sql, quantity)
    records = cur.fetchmany(num)
    books = []
    for rec in records:
        books.append(Book(rec[0], rec[1], rec[2]))
    return books

@mysqlConn
def getRecommendedBooks(userToken, cur, conn):
    '''Get 20 recommended books which is ordered by relevance.

    Recommended books are generated by outer systems.
    :Param userToken: The token which identifies a user.
    :Return: A list of Book object.
    '''
    sql = '''select recBooks from user where token = %s'''
    cur.execute(sql, userToken)
    record = cur.fetchone()[0]
    if not record:
        # If a user visited this site for the first time, no recommended
        # book exists.
        return getPopularBooks(30)[10:]
    bookUids = '(%s)' % record
    sql = '''select uid, name, imgUrl from book where uid in %s'''
    num = cur.execute(sql, bookUids)
    records = rec.fetchmany(num)
    books = []
    for rec in records:
        books.append(Book(rec[0], rec[1], rec[2]))
    return books

@mysqlConn
def searchBooks(word, page, size, cur, conn):
    startIndex = page * size
    word = '%' + '%'.join(word) + '%'
    sql = '''select uid, name, imgUrl from book where name like %s 
        limit %s, %s'''
    num = cur.execute(sql, (word, startIndex, size))
    records = cur.fetchmany(num)
    books = []
    for rec in records:
        books.append(Book(rec[0], rec[1], rec[2]))
    return books

@mysqlConn
def getBookDetail(bookUid, cur, conn):
    '''Return a Book object with full infomation.
    '''
    sql = '''select id, name, imgUrl, isbn, author, press, doubanPoint,
        doubanRateSum, bookDescription, authorDescription, sysuLibUrl
        from book where uid = %s'''
    cur.execute(sql, bookUid)
    rec = list(cur.fetchone())
    for index in range(len(rec)):
        if rec[index] is None:
            rec[index] = ''
    return Book(*rec)

@mysqlConn
def getRelevantBooks(bookUid, cur, conn):
    sql = '''select relevantBooks from book where uid = %s'''
    cur.execute(sql, bookUid)
    record = cur.fetchone()[0]
    bookUids = '(%s)' % record
    sql = '''select uid, name, imgUrl from book where uid in %s'''
    num = cur.execute(sql, bookUids)
    records = rec.fetchmany(num)
    books = []
    for rec in records:
        books.append(Book(rec[0], rec[1], rec[2]))
    return books

@mysqlConn
def getBooksByLabel(labelName, page, size, order, cur, conn):
    pass

@mysqlConn
def incBookViewCount(userToken, bookUid, cur, conn):
    pass
